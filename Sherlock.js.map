{"version":3,"sources":["_src/Sherlock.js"],"names":["define","_TemplatedMixin","_WidgetBase","domClass","domConstruct","domGeom","domStyle","keys","mouse","on","query","template","array","declare","watchUtils","SimpleFillSymbol","SimpleLineSymbol","SimpleMarkerSymbol","Spinner","templateString","_deferred","_addingGraphic","_isOverTable","_timer","_spinTimer","_currentIndex","mapView","provider","promptMessage","zoomLevel","maxResultsToDisplay","placeHolder","symbolFill","symbolLine","symbolPoint","graphicsLayer","preserveGraphics","appendToBody","postCreate","console","log","arguments","_wireEvents","_setUpGraphicsLayer","opts","lines","length","width","radius","corners","rotate","direction","color","speed","trail","shadow","hwaccel","className","zIndex","top","left","spinner","showSpinner","set","searchIconSpan","el","spin","spinnerDiv","hideSpinner","clearTimeout","stop","afterMapLoaded","graphics","when","style","outline","size","own","textBox","_onTextBoxKeyUp","bind","_toggleTable","value","_startSearchTimer","matchesTable","enter","removeClass","leave","add","matchesList","children","evt","keyCode","ENTER","_setMatch","_search","DOWN_ARROW","_moveSelection","UP_ARROW","setTimeout","increment","remove","searchString","_deleteAllTableRows","cancelPendingRequests","search","then","results","_processResults","err","message","Error","features","info","_sortArray","_removeDuplicateResults","num","showMessage","_populateTable","slice","hideMessage","e","list","forEach","f","some","existingF","attributes","searchField","contextField","push","feat","row","create","class","msg","fString","sliceIndex","matchDiv","innerHTML","bold","cntyDiv","_onRowClick","event","currentTarget","removeAll","contextValue","textContent","getFeature","_zoom","goToPromise","symbol","geometry","type","lod","map","basemap","baseLayers","items","tileInfo","lods","goTo","target","zoom","graphic","addMany","once","onZoomed","table","destroy","show","place","document","body","textBoxPosition","position","y","h","x","displayValue","that","sortFeatures","a","b","sort"],"mappings":"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","file":"Sherlock.js","sourcesContent":["define([\n    'dijit/_TemplatedMixin',\n    'dijit/_WidgetBase',\n\n    'dojo/dom-class',\n    'dojo/dom-construct',\n    'dojo/dom-geometry',\n    'dojo/dom-style',\n    'dojo/keys',\n    'dojo/mouse',\n    'dojo/on',\n    'dojo/query',\n    'dojo/text!./templates/Sherlock.html',\n    'dojo/_base/array',\n    'dojo/_base/declare',\n\n    'esri/core/watchUtils',\n    'esri/symbols/SimpleFillSymbol',\n    'esri/symbols/SimpleLineSymbol',\n    'esri/symbols/SimpleMarkerSymbol',\n\n    'spinjs/spin'\n], function (\n    _TemplatedMixin,\n    _WidgetBase,\n\n    domClass,\n    domConstruct,\n    domGeom,\n    domStyle,\n    keys,\n    mouse,\n    on,\n    query,\n    template,\n    array,\n    declare,\n\n    watchUtils,\n    SimpleFillSymbol,\n    SimpleLineSymbol,\n    SimpleMarkerSymbol,\n\n    Spinner\n) {\n    return declare([_WidgetBase, _TemplatedMixin], {\n        templateString: template,\n\n        // _deferred: [private] Dojo.Deferred\n        //      Dojo.Deferred for canceling pending requests.\n        _deferred: null,\n\n        // _addingGraphic: [private] Boolean\n        //      switch to prevent a new graphic from being cleared\n        _addingGraphic: true,\n\n        // _isOverTable: Boolean\n        //      A switch to help with onBlur callback on search box.\n        _isOverTable: false,\n\n        // _timer: Number\n        //      A timer to delay the search so that it doesn't fire too\n        //      many times when typing quickly.\n        _timer: null,\n\n        // _spinTimer: Number\n        //      A timer to delay the spinner from showing too soon\n        _spinTimer: null,\n\n        // _currentIndex: Integer\n        //      The index of the currently selected item in the results.\n        _currentIndex: 0,\n\n\n        // Parameters to constructor\n\n        // mapView: esri.Map\n        //      esri.Map reference.\n        mapView: null,\n\n        // provider: Object\n        //      An object that provides searching functionality.\n        //      Found in sherlock/providers\n        provider: null,\n\n        // promptMessage: String\n        //      The label that shows up in the promptMessage for the text box.\n        promptMessage: '',\n\n        // zoomLevel: Integer\n        //      The number of cache levels up from the bottom that you want to zoom to.\n        zoomLevel: 5,\n\n        // maxResultsToDisplay: Integer\n        //      The maximum number of results that will be displayed.\n        //      If there are more, no results are displayed.\n        maxResultsToDisplay: 20,\n\n        // placeHolder: String\n        //     The placeholder text in the text box\n        placeHolder: 'Map Search...',\n\n        // symbolFill: esri.symbol (optional)\n        //      esri.symbol zoom graphic symbol for polygons.\n        symbolFill: null,\n\n        // symbolLine: esri.symbol (optional)\n        //     esri.symbol zoom graphic symbol for polylines.\n        symbolLine: null,\n\n        // symbolPoint: esri.symbol (optional)\n        //      esri.symbol zoom graphic symbol for points.\n        symbolPoint: null,\n\n        // graphicsLayer: esri/layers/GraphicsLayer (optional)\n        //      If provided, this is the graphics layer that this widget will use.\n        //      The widget assumes that if you provide your own graphics layer then\n        //      it is already added to the map.\n        //      If not, then it will create it's own layer and add it to the map.\n        graphicsLayer: null,\n\n        // preserveGraphics: Boolean (optional)\n        //      Set to true if you want the graphics to persist after map navigation.\n        preserveGraphics: false,\n\n        // appendToBody: Boolean (optional)\n        //      When true (default) the matches table is appended to the body element to allow it to overlap all others\n        appendToBody: true,\n\n        postCreate: function () {\n            // summary:\n            //      Overrides method of same name in dijit._Widget.\n            // tags:\n            //      private\n            console.log('sherlock.Sherlock:postCreate', arguments);\n\n            this._wireEvents();\n            this._setUpGraphicsLayer();\n\n            var opts = {\n                lines: 9, // The number of lines to draw\n                length: 4, // The length of each line\n                width: 3, // The line thickness\n                radius: 4, // The radius of the inner circle\n                corners: 1, // Corner roundness (0..1)\n                rotate: 0, // The rotation offset\n                direction: 1, // 1: clockwise, -1: counterclockwise\n                color: '#000', // #rgb or #rrggbb or array of colors\n                speed: 1, // Rounds per second\n                trail: 60, // Afterglow percentage\n                shadow: false, // Whether to render a shadow\n                hwaccel: true, // Whether to use hardware acceleration\n                className: 'spinner', // The CSS class to assign to the spinner\n                zIndex: 2e9, // The z-index (defaults to 2000000000)\n                top: 'auto', // Top position relative to parent in px\n                left: 'auto' // Left position relative to parent in px\n            };\n            this.spinner = new Spinner(opts);\n        },\n        showSpinner: function () {\n            // summary:\n            //      sets up and shows the spinner\n            console.log('sherlock.Sherlock:showSpinner', arguments);\n\n            domStyle.set(this.searchIconSpan, 'display', 'none');\n\n            if (!this.spinner.el) {\n                // only start if it's not already started\n                this.spinner.spin(this.spinnerDiv);\n            }\n        },\n        hideSpinner: function () {\n            // summary:\n            //      hides the spinner and shows the search icon again\n            console.log('sherlock.Sherlock:hideSpinner', arguments);\n\n            clearTimeout(this._spinTimer);\n            this.spinner.stop();\n            domStyle.set(this.searchIconSpan, 'display', 'inline');\n        },\n        _setUpGraphicsLayer: function () {\n            // summary:\n            //      Sets up the graphics layer and associated symbols.\n            // tags:\n            //      private\n            console.log('sherlock.Sherlock:_setUpGraphicsLayer', arguments);\n\n            var afterMapLoaded = () => {\n                if (!this.graphicsLayer) {\n                    this.graphicsLayer = this.mapView.graphics;\n                }\n            };\n\n            // create new graphics layer and add to map\n            this.mapView.when(afterMapLoaded);\n\n            // set up new symbols, if needed\n            /* eslint-disable no-magic-numbers */\n            if (!this.symbolFill) {\n                this.symbolFill = new SimpleFillSymbol({\n                    style: 'none',\n                    outline: {\n                        style: 'dash-dot',\n                        color: [255, 255, 0],\n                        width: 1.5\n                    }\n                });\n            }\n\n            if (!this.symbolLine) {\n                this.symbolLine = new SimpleLineSymbol({\n                    color: [255, 255, 0],\n                    width: 5\n                });\n            }\n\n            if (!this.symbolPoint) {\n                this.symbolPoint = new SimpleMarkerSymbol({\n                    color: [255, 255, 0, 0.5],\n                    size: 10\n                });\n            }\n            /* eslint-enable no-magic-number */\n        },\n        _wireEvents: function () {\n            // summary:\n            //      Wires events.\n            // tags:\n            //      private\n            console.log('sherlock.Sherlock:_wireEvents', arguments);\n\n            this.own(\n                on(this.textBox, 'keyup', this._onTextBoxKeyUp.bind(this)),\n                on(this.textBox, 'blur', () => {\n                    // don't hide table if the cursor is over it\n                    if (!this._isOverTable) {\n                        // hide table\n                        this._toggleTable(false);\n                    }\n                }),\n                on(this.textBox, 'focus', () => {\n                    if (this.textBox.value.length > 0) {\n                        this._startSearchTimer();\n                    }\n                }),\n                on(this.matchesTable, mouse.enter, () => {\n                    // set switch\n                    this._isOverTable = true;\n\n                    // remove any rows selected using arrow keys\n                    query('.highlighted-row').removeClass('highlighted-row');\n\n                    // reset current selection\n                    this._currentIndex = 0;\n                }),\n                on(this.matchesTable, mouse.leave, () => {\n                    // set switch\n                    this._isOverTable = false;\n\n                    // set first row as selected\n                    domClass.add(this.matchesList.children[0], 'highlighted-row');\n                })\n            );\n        },\n        _onTextBoxKeyUp: function (evt) {\n            // summary:\n            //      Handles the text box onKeyUp evt.\n            // tags:\n            //      private\n            console.log('sherlock.Sherlock:_onTextBoxKeyUp', arguments);\n\n            if (evt.keyCode === keys.ENTER) {\n                // zoom if there is at least one match\n                if (this.matchesList.children.length > 1) {\n                    this._setMatch(this.matchesList.children[this._currentIndex]);\n                } else {\n                    // search\n                    this._search(this.textBox.value);\n                }\n            } else if (evt.keyCode === keys.DOWN_ARROW) {\n                this._moveSelection(1);\n            } else if (evt.keyCode === keys.UP_ARROW) {\n                this._moveSelection(-1);\n            } else {\n                this._startSearchTimer();\n            }\n        },\n        _startSearchTimer: function () {\n            // summary:\n            //      Sets a timer before searching so that the search function\n            //      isn't called too many times.\n            // tags:\n            //      private\n            // set timer so that it doesn't fire repeatedly during typing\n            console.log('sherlock.Sherlock:_startSearchTimer', arguments);\n\n            clearTimeout(this._timer);\n            this._timer = setTimeout(() => {\n                this._search(this.textBox.value);\n            }, 250);\n        },\n        _moveSelection: function (increment) {\n            // summary:\n            //      Moves the selected row in the results table based upon\n            //      the arrow keys being pressed.\n            // increment: Number\n            //      The number of rows to move. Positive moves down, negative moves up.\n            // tags:\n            //      private\n            console.log('sherlock.Sherlock:_moveSelection', arguments);\n\n            // exit if there are no matches in table\n            if (this.matchesList.children.length < 2) {\n                this._startSearchTimer();\n\n                return;\n            }\n\n            // remove selected class if any\n            domClass.remove(this.matchesList.children[this._currentIndex], 'highlighted-row');\n\n            // increment index\n            this._currentIndex = this._currentIndex + increment;\n\n            // prevent out of bounds index\n            if (this._currentIndex < 0) {\n                this._currentIndex = 0;\n            } else if (this._currentIndex > this.matchesList.children.length - 2) {\n                this._currentIndex = this.matchesList.children.length - 2;\n            }\n\n            // add selected class using new index\n            domClass.add(this.matchesList.children[this._currentIndex], 'highlighted-row');\n        },\n        _search: function (searchString) {\n            // summary:\n            //      Initiates a search on the provider\n            // searchString: String\n            //      The string that is used to construct the LIKE query.\n            // tags:\n            //      private\n            console.log('sherlock.Sherlock:_search', arguments);\n\n            // return if not enough characters\n            if (searchString.length < 1) {\n                this._deleteAllTableRows(this.matchesTable);\n\n                return;\n            }\n\n            // delay spinner a bit\n            this._spinTimer = setTimeout(this.showSpinner.bind(this), 250);\n\n            this.provider.cancelPendingRequests();\n\n            this.provider.search(searchString).then((results) => {\n                // clear table\n                this._deleteAllTableRows(this.matchesTable);\n\n                this._processResults(results);\n            },\n            (err) => {\n                // clear table\n                this._deleteAllTableRows(this.matchesTable);\n\n                // swallow errors from cancels\n                if (err.message !== 'undefined') {\n                    throw new Error('sherlock.Sherlock Provider Error: ' + err.message);\n                }\n\n                this.hideSpinner();\n            });\n        },\n        _processResults: function (features) {\n            // summary:\n            //      Processes the features returned from the search provider\n            // features: Object[]\n            // tags:\n            //      private\n            console.log('sherlock.Sherlock:_processResults', arguments);\n\n            try {\n                console.info(features.length + ' search features found.');\n\n                // remove duplicates\n                features = this._sortArray(this._removeDuplicateResults(features));\n\n                // get number of unique results\n                var num = features.length;\n                console.info(num + ' unique results.');\n\n                // return if too many values or no values\n                if (num > this.maxResultsToDisplay) {\n                    this.showMessage('More than ' + this.maxResultsToDisplay + ' matches found...');\n                    this._populateTable(features.slice(0, this.maxResultsToDisplay - 1));\n                } else if (num === 0) {\n                    this.showMessage('There are no matches.');\n                } else {\n                    this.hideMessage();\n\n                    this._populateTable(features);\n                }\n            } catch (e) {\n                throw new Error('sherlock.Sherlock_processResults: ' + e.message);\n            }\n\n            this.hideSpinner();\n        },\n        _removeDuplicateResults: function (features) {\n            // summary:\n            //      Removes duplicates from the set of features.\n            // features: Object[]\n            //      The array of features that need to be processed.\n            // returns: Object[]\n            //      The array after it has been processed.\n            // tags:\n            //      private\n            console.log('sherlock.Sherlock:_removeDuplicateResults', arguments);\n\n            var list = [];\n            array.forEach(features, function (f) {\n                if (array.some(list, function (existingF) {\n                    if (existingF.attributes[this.provider.searchField] === f.attributes[this.provider.searchField]) {\n                        if (this.provider.contextField) {\n                            if (existingF.attributes[this.provider.contextField] ===\n                                f.attributes[this.provider.contextField]) {\n                                return true;\n                            }\n                        } else {\n                            return true; // there is a match\n                        }\n                    }\n                }, this) === false) {\n                    // add item\n                    list.push(f);\n                }\n            }, this);\n\n            return list;\n        },\n        _populateTable: function (features) {\n            // summary:\n            //      Populates the autocomplete table.\n            // features: Object[]\n            //      The array of features to populate the table with.\n            // tags:\n            //      private\n            console.log('sherlock.Sherlock:_populateTable', arguments);\n\n            // loop through all features\n            array.forEach(features, function (feat) {\n                // insert new empty row\n                var row = domConstruct.create('li', {\n                    class: 'match'\n                }, this.msg, 'before');\n\n                // get match value string and\n                // bold the matching letters\n                var fString = feat.attributes[this.provider.searchField];\n                var sliceIndex = this.textBox.value.length;\n                if (this.provider.contextField) {\n                    // add context field values\n                    var matchDiv = domConstruct.create('div', {\n                        class: 'first-cell'\n                    }, row);\n                    matchDiv.innerHTML = fString.slice(0, sliceIndex) + fString.slice(sliceIndex).bold();\n                    var cntyDiv = domConstruct.create('div', {\n                        class: 'cnty-cell'\n                    }, row);\n                    cntyDiv.innerHTML = feat.attributes[this.provider.contextField] || '';\n                    domConstruct.create('div', {\n                        style: 'clear: both;'\n                    }, row);\n                } else {\n                    row.innerHTML = fString.slice(0, sliceIndex) + fString.slice(sliceIndex).bold();\n                }\n\n                // wire onclick event\n                this.own(on(row, 'click', this._onRowClick.bind(this)));\n            }, this);\n\n            // select first row\n            domClass.add(this.matchesList.children[0], 'highlighted-row');\n\n            // show table\n            this._toggleTable(true);\n        },\n        _onRowClick: function (event) {\n            // summary:\n            //      Handles when someone clicks on the a row in the autocomplete\n            //      table.\n            // event: Event\n            //      The event object.\n            // tags:\n            //      private\n            console.log('sherlock.Sherlock:_onRowClick', arguments);\n\n            this._setMatch(event.currentTarget);\n        },\n        _setMatch: function (row) {\n            // summary:\n            //      Sets the passed in row as a match in the text box and\n            //      zooms to the feature.\n            // row: Object\n            //      The row object that you want to set the textbox to.\n            // tags:\n            //      private\n            console.log('sherlock.Sherlock:_setMatch', arguments);\n\n            // clear any old graphics\n            this.graphicsLayer.removeAll();\n\n            // clear table\n            this._toggleTable(false);\n\n            // clear prompt message\n            this.hideMessage();\n\n            // set textbox to full value\n            var contextValue;\n            if (this.provider.contextField) {\n                // dig deeper when context values are present\n                this.textBox.value = row.children[0].textContent;\n                contextValue = row.children[1].innerHTML;\n            } else {\n                this.textBox.value = row.textContent;\n            }\n\n            // execute query / canceling any previous query\n            this.provider.cancelPendingRequests();\n\n            this.provider.getFeature(this.textBox.value, contextValue).then(\n                (graphics) => {\n                    this._zoom(graphics);\n                },\n                (err) => {\n                    // clear table\n                    this._deleteAllTableRows(this.matchesTable);\n\n                    // swallow errors from cancels\n                    if (err.message !== 'undefined') {\n                        throw new Error('sherlock.Sherlock Provider Error: ' + err.message);\n                    }\n\n                    this.hideSpinner();\n                }\n            );\n        },\n        showMessage: function (msg) {\n            // summary:\n            //      shows a messages at the top of the matches list\n            // msg: String\n            console.log('sherlock.Sherlock:showMessage', arguments);\n\n            this.msg.innerHTML = msg;\n            domStyle.set(this.msg, 'display', 'block');\n            this._toggleTable(true);\n        },\n        hideMessage: function () {\n            // summary:\n            //      hids the message at the top of the matches list\n            console.log('sherlock.Sherlock:hideMessage', arguments);\n\n            domStyle.set(this.msg, 'display', 'none');\n        },\n        _zoom: function (graphics) {\n            // summary:\n            //      Zooms to the passed in graphic(s).\n            // graphics: esri.Graphic[]\n            //      The esri.Graphic(s) that you want to zoom to.\n            // tags:\n            //      private\n            console.log('sherlock.Sherlock:_zoom', arguments);\n\n            var goToPromise;\n            var symbol;\n\n            // check for point feature\n            if (graphics[0].geometry.type === 'point') {\n                var lod = this.mapView.map.basemap.baseLayers.items[0].tileInfo.lods.length - this.zoomLevel;\n\n                goToPromise = this.mapView.goTo({\n                    target: graphics,\n                    zoom: lod\n                });\n\n                symbol = this.symbolPoint;\n            } else {\n                // zoom to feature\n                goToPromise = this.mapView.goTo(graphics);\n\n                symbol = (graphics[0].geometry.type === 'polyline') ? this.symbolLine : this.symbolFill;\n            }\n\n            graphics.forEach(function (graphic) {\n                graphic.symbol = symbol;\n            });\n\n            goToPromise.then(() => {\n                this.graphicsLayer.addMany(graphics);\n\n                if (!this.preserveGraphics) {\n                    watchUtils.once(this.mapView, 'extent', () => {\n                        this.graphicsLayer.removeAll();\n                    });\n                }\n            });\n\n            this.onZoomed(graphics);\n\n            return goToPromise;\n        },\n        onZoomed: function () {\n            // summary:\n            //      Fires after the map has been zoomed to the graphic.\n            console.log('sherlock.Sherlock:onZoomed', arguments);\n        },\n        _deleteAllTableRows: function (table) {\n            // summary:\n            //      Deletes all of the rows in the table.\n            // table: Object\n            //      The table that you want to act upon.\n            // tags:\n            //      private\n            console.log('sherlock.Sherlock:_deleteAllTableRows', arguments);\n\n            // delete all rows in table\n            query('li.match', this.matchesTable).forEach(domConstruct.destroy);\n\n            // hide table\n            domStyle.set(table, 'display', 'none');\n\n            // reset current index\n            this._currentIndex = 0;\n        },\n        _toggleTable: function (show) {\n            // summary:\n            //      Toggles the visibility of the autocomplete table.\n            // show: Boolean\n            //      If true, table is shown. If false, table is hidden.\n            // tags:\n            //      private\n            console.log('sherlock.Sherlock:_toggleTable', arguments);\n\n            if (this.appendToBody) {\n                // run this every time the matches table is shown just in\n                // case the widget has moved within the flow of the page\n                domConstruct.place(this.matchesTable, document.body);\n                var textBoxPosition = domGeom.position(this.textBox);\n                domStyle.set(this.matchesTable, {\n                    top: textBoxPosition.y + textBoxPosition.h + 'px',\n                    left: textBoxPosition.x + 'px'\n                });\n            }\n\n            var displayValue = (show) ? 'block' : 'none';\n            domStyle.set(this.matchesTable, 'display', displayValue);\n        },\n        _sortArray: function (list) {\n            // summary:\n            //      Sorts the array by both the searchField and contextField\n            //      if there is a contextField specied. If no context field is\n            //      specified, no sorting is done since it's already done on the server\n            //      with the 'ORDER BY' statement. I tried to add a second field to the\n            //      'ORDER BY' statement but ArcGIS Server just choked.\n            console.log('sherlock.Sherlock:_sortArray', arguments);\n\n            // custom sort function\n            var that = this;\n\n            function sortFeatures(a, b) {\n                var searchField = that.provider.searchField;\n                var contextField = that.provider.contextField;\n                if (a.attributes[searchField] === b.attributes[searchField]) {\n                    if (a.attributes[contextField] < b.attributes[contextField]) {\n                        return -1;\n                    }\n\n                    return 1;\n                } else if (a.attributes[searchField] < b.attributes[searchField]) {\n                    return -1;\n                }\n\n                return 1;\n            }\n\n            // sort features\n            return list.sort(sortFeatures);\n        }\n    });\n});\n"]}